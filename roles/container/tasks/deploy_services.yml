---
- name: Ensure the proper container is there
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    state: directory

  loop:
    - "{{ compose_dir }}"
    - "{{ container_dir }}"

- name: Create Traefik data directory
  file:
    path: "{{ container_dir }}/traefik"
    state: directory
  
  loop:
    - "{{ container_dir }}/traefik"

- name: Copy Traefik configuration template
  template:
    src: traefik.yml
    dest: "{{ container_dir }}/traefik/traefik.yml"
  notify: Restart Traefik container

- name: Create acme.json file with correct permissions
  file:
    path: "{{ container_dir }}/traefik/acme/acme.json"
    state: touch
    mode: 0600
    owner: 101
    group: 101

- name: Deploy Traefik container
  docker_container:
    name: traefik
    image: "traefik:latest"
    volumes:
      - "{{ container_dir }}/traefik/traefik.yml:/etc/traefik/traefik.yml"
      - "{{ container_dir }}/traefik/acme:/etc/traefik/acme"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "80:80"
      - "443:443"
    restart_policy: unless-stopped
    notify: Reload Traefik
    environments:
      - DUCKDNS_TOKEN={{ duckdns_token }}

- name: Deploy Whoami example container
  docker_container:
    name: whoami
    image: "whoami:latest"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.{{ domain }}`)"
      - "traefik.http.routers.whoami.entrypoints=web"

- name: Test Whoami endpoint
  uri:
    url: "https://whoami.{{ domain }}"
    return_content: yes

  register: whoami_response

- debug:
    var: whoami_response

- name: Deploy Pi-hole container
  docker_container:
    name: pihole
    image: "pihole/pihole:latest"
    env:
      - "TZ={{ timezone }}"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8080:80"
      - "4430:443"
    volumes:
      - "{{ container_dir }}/pihole/pihole/:/etc/pihole/"
      - "{{ container_dir }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    labels:
      -  traefik.enable: "true"
      -  traefik.http.routers.pihole.rule: "Host(`pihole.{{ domain }}`)"
      -  traefik.http.routers.pihole.entrypoints: "web"
      -  traefik.http.routers.pihole.middlewares: "pihole-admin"
      -  traefik.http.routers.pihole.service: "pihole"
      -  traefik.http.routers.pihole.tls: "true"
      -  traefik.http.middlewares.pihole-admin.addprefix.prefix: "/admin"
      -  traefik.http.routers.pihole_http.entrypoints: "web"
      -  traefik.http.routers.pihole_http.rule: "Host(`{{ pihole_public_domain }}`)"
      -  traefik.http.routers.pihole_http.middlewares: "redirect-to-https"
      -  traefik.http.services.pihole.loadBalancer.server.port: "80"
    restart_policy: unless-stopped   
    cap_add:
      - NET_ADMIN

- name: Get status inside Pi-hole container
  docker_container_exec:
    name: pihole
    cmd: "pihole status"
  register: pihole_status

- debug:
    var: pihole_status

- name: Test Pi-hole subdomain endpoint
  uri:
    url: "https://pihole.{{ domain }}"
    return_content: yes

  register: pihole_response

- debug:
    var: pihole_response



    
    
