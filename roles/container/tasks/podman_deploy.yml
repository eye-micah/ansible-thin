---


- name: Ensure proper container directories are present.
  ansible.builtin.file:
    path: "{{ item }}"
    #owner: "{{ username }}"
    #group: "{{ username }}"
    state: directory
    setype: container_file_t
  become_user: "{{ username }}"
  become: true
  loop:
    - "{{ container_compose }}"
    #- "{{ container_dir }}/traefik/acme"
    - "{{ container_dir }}/nginx"
    - "{{ container_dir }}/letsencrypt/data/dns-conf"
    - "{{ container_dir }}/adguard-home/conf"
    - "{{ container_dir }}/adguard-home/work"
    #- "{{ container_dir }}/pihole/etc-pihole"
    #- "{{ container_dir }}/pihole/etc-dnsmasq.d"
    - "{{ container_dir }}/vw-vault/data"

#- name: Create a podman network for reverse-proxied network services 
#  containers.podman.podman_network:
#    name: nginx-net
#  become: false

- name: Deploy cloudflared container.
  containers.podman.podman_container:
    recreate: false
    network: host
    name: cloudflared
    image: docker.io/cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token {{ tunnel_token }}


- name: Deploy AdGuard Home
  become: false
  containers.podman.podman_container:
    name: agh
    image: docker.io/adguard/adguardhome
    volumes:
      #- "agh-workdir:/opt/adguardhome/work:z"
      - "{{ container_dir }}/adguard-home/work:/opt/adguardhome/work:z"
      #- "agh-confdir:/opt/adguardhome/conf:z"
      - "{{ container_dir }}/adguard-home/conf:/opt/adguardhome/conf:z"
    ports:
      - '8081:80'
      - '3000:3000/tcp'
      - '53:53/tcp'
      - '53:53/udp'
      - '853:853/tcp'
      - '853:853/udp'
      - '5443:5443/tcp'
      - '5443:5443/udp'
      - '6060:6060/tcp'


- name: Set up Vaultwarden
  become: false
  containers.podman.podman_container:
    name: vw 
    image: docker.io/vaultwarden/server:latest
    volumes:
      - "{{ container_dir }}/vw-vault/data:/data:Z"
    ports:
      - "8082:80"


- name: Copy cloudflare.ini Swag configuration (I need a better way to do this)
  become: false
  template:
    src: cloudflare.ini.j2
    dest: "{{ container_dir }}/letsencrypt/data/dns-conf/cloudflare.ini"

- debug:
    msg: "Server URL set as {{ server_url }}"

- name: Deploy Linuxserver SWAG with Cloudflare
  become: false
  containers.podman.podman_container:
    name: swag
    image: lscr.io/linuxserver/swag:latest
    cap_add: NET_ADMIN
    env:
      PUID=1000
      PGID=1000
      TZ={{ timezone }}
      URL={{ server_url }}
      SUBDOMAINS=wildcard
      ONLY_SUBDOMAINS=true
      VALIDATION=dns
      DNSPLUGIN=cloudflare
    volumes: "{{ container_dir }}/letsencrypt/data:/config:Z"
    ports:
      - 443:443
      - 80:80





    


    


